{"version":3,"sources":["components/soundHandler.js","components/principalTimer.js","components/formRender.js","App.js","serviceWorker.js","index.js","sound/startBell.wav"],"names":["SoundHandler","props","replay","state","endBellSound","play","startBellSound","Audio","this","soundType","setTimeout","Component","PrincipalTimer","interval","minusFunction","intervalRest","rest","setState","secondsRepresentation","stopper","minutesRepresentation","ringBell","soundDismounter","console","log","restOrNot","secondsAdder","assaults","startAndStop","className","onClick","restart","skipRestFn","restTime","restTimeCopy","actualRound","minutesCopy","secondsCopy","stop","start","event","staticRound","parseInt","minutes","seconds","twoPoints","skipRest","TimerForm","minutesHandler","target","value","minutesValue","secondsHandler","secondsValue","asHandler","asValue","restHandler","restValue","dismounter","renderTimer","onSubmitHandler","preventDefault","alert","onSubmit","htmlFor","id","onChange","type","App","renderForm","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.696073d1.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport startBellSound from './../sound/startBell.wav';\r\nexport default class SoundHandler extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            startBellSound: new Audio(startBellSound),\r\n            endBellSound: new Audio(startBellSound)\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        if (this.props.soundType === 'start'){\r\n        this.state.startBellSound.play();\r\n        }\r\n        if(this.props.soundType === 'end'){\r\n            this.state.startBellSound.play();\r\n            setTimeout(this.replay, 250);\r\n        }\r\n    }\r\n    replay = () => {\r\n        this.state.endBellSound.play();\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n            </>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport SoundHandler from './soundHandler';\r\n\r\nexport default class PrincipalTimer extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            minutesRepresentation: parseInt(props.minutes),\r\n            minutesCopy: parseInt(props.minutes),\r\n            secondsRepresentation: parseInt(props.seconds),\r\n            secondsCopy: parseInt(props.seconds),\r\n            assaults: parseInt(props.assaults) - 1,\r\n            actualRound: 1,\r\n            staticRound: parseInt(props.assaults),\r\n            restTime: parseInt(props.rest),\r\n            restTimeCopy: parseInt(props.rest),\r\n            twoPoints: ':',\r\n            startAndStop: <p className=\"btn btn-success column col-3 col-mx-auto\" onClick={this.start}>Start</p>,\r\n            skipRest: null,\r\n            stopper: false,\r\n            ringBell: ''\r\n        }\r\n    }\r\n    interval = () => {\r\n        setTimeout(this.minusFunction, 1000);\r\n    }\r\n    intervalRest = () => {\r\n        setTimeout(this.rest, 1000);\r\n    }\r\n    minusFunction = () => {\r\n        this.setState({ secondsRepresentation: this.state.secondsRepresentation - 1 });\r\n        if (this.state.stopper){\r\n            return 0;\r\n        }\r\n        if (this.state.secondsRepresentation <= 0) {\r\n            if (this.state.minutesRepresentation <= 0) {\r\n                this.setState({ ringBell: <SoundHandler soundType='end'/> }); //Este es el sonido de final de asalto\r\n                setTimeout(this.soundDismounter, 1000); //Desmontamos el sonido\r\n                this.setState({minutesRepresentation: 0});\r\n                this.setState({secondsRepresentation: 0});\r\n                console.log(\"This.restornot\");\r\n                this.restOrNot();\r\n                return 0; //Parar la ejecución\r\n            }\r\n            else {\r\n                this.secondsAdder();\r\n            }\r\n        }\r\n        //else{\r\n        this.interval();\r\n        //}\r\n    }\r\n    secondsAdder = () => {\r\n        this.setState({ minutesRepresentation: this.state.minutesRepresentation - 1 });\r\n        this.setState({ secondsRepresentation: this.state.secondsRepresentation + 60 });\r\n    }\r\n    restOrNot = () => {\r\nif (this.state.assaults > 0) {\r\n            this.setState({ assaults: this.state.assaults - 1 });\r\n            this.setState({ startAndStop: <p className=\"btn btn-error column col-3 col-mx-auto\" onClick={this.skipRestFn}>Skip Rest</p> });\r\n            this.rest()\r\n        }\r\n        else {\r\n            this.setState({ startAndStop: <p className=\"btn column col-3 col-mx-auto\" onClick={this.restart}>Restart</p> });\r\n            return 0;\r\n        }\r\n    }\r\n    rest = () => {\r\n        if (this.state.restTime >= 0) {\r\n            this.setState({ restTime: this.state.restTime - 1 });\r\n            this.intervalRest();\r\n        }\r\n        else {\r\n            this.setState({ restTime: this.state.restTimeCopy });\r\n            this.setState({ actualRound: this.state.actualRound + 1 });\r\n            this.setState({ minutesRepresentation: this.state.minutesCopy });\r\n            this.setState({ secondsRepresentation: this.state.secondsCopy });\r\n            this.setState({ startAndStop: <p className=\"btn column col-3 col-mx-auto\" onClick={this.stop}>Stop</p> });\r\n            this.setState({ringBell: <SoundHandler  soundType='start'/>});\r\n            setTimeout(this.soundDismounter, 1000); //En un segundo llama a una función que desmonta el handler de sonido, para usarlo mas tarde con otros sonidos.\r\n            this.interval();\r\n        }\r\n    }\r\n    start = (event) => {\r\n        this.setState({stopper: false});\r\n        this.setState({ startAndStop: <p className=\"btn column col-3 col-mx-auto\" onClick={this.stop}>Stop</p> });\r\n        this.setState({ringBell: <SoundHandler  soundType='start'/>});\r\n        setTimeout(this.soundDismounter, 1000); //En un segundo llama a una función que desmonta el handler de sonido, para usarlo mas tarde con otros sonidos.\r\n        this.interval();\r\n    }\r\n    stop = (event) => {\r\n        this.setState({ startAndStop: <p className=\"btn btn-primary column col-3 col-mx-auto\" onClick={this.start}>Continue</p> });\r\n        this.setState({ stopper: true });\r\n    }\r\n    restart = (event) => {\r\n        this.setState({minutesRepresentation: this.state.minutesCopy});\r\n        this.setState({secondsRepresentation: this.state.secondsCopy});\r\n        /* assaults: parseInt(props.assaults) - 1,\r\n            actualRound: 1,*/\r\n            this.setState({assaults: this.state.staticRound - 1});\r\n            this.setState({actualRound: 1});\r\n            this.setState({startAndStop: <p className=\"btn btn-success column col-3 col-mx-auto\" onClick={this.start}>Start</p>});\r\n            \r\n    }\r\n    skipRestFn = (event) => {\r\n        this.setState({ restTime: 0 });\r\n    }\r\n    soundDismounter = () => {\r\n        this.setState({ringBell: ''});\r\n    }\r\n    componentDidMount(){\r\n        if(this.state.secondsCopy === 0){ //No se hace la comprobacion de si los minutos tambien son cero ya que en el componente padre ya lo hace.\r\n            this.setState ({minutesCopy: this.state.minutesCopy - 1});\r\n            this.setState ({minutesRepresentation: this.state.minutesRepresentation - 1});\r\n            this.setState ({secondsCopy: 60});\r\n            this.setState ({secondsRepresentation: 60});\r\n        }\r\n    }\r\n    componentWillUnmount(){\r\n        //Hay que controlar el cierre de la app.\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"columns\">\r\n                    <h1 className=\"label label-rounded text-center column col-6 col-mx-auto mt-2\">{`${this.state.minutesRepresentation}${this.state.twoPoints}${this.state.secondsRepresentation}`}</h1>\r\n                    <div className=\"column col-12 columns\">\r\n                        <h2 className=\"label label-rounded text-center column col-8 col-mx-auto\">Rest Time: {this.state.restTime}</h2>\r\n                    </div>\r\n                    <h3 className=\"text-center column col-12 col-mx-auto\">Round: {this.state.actualRound} of {this.state.staticRound}</h3>\r\n                    {this.state.startAndStop}\r\n                    {this.state.skipRest}\r\n                    {this.state.ringBell}\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport PrincipalTimer from './principalTimer';\r\nexport default class TimerForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            renderTimer: '',\r\n            minutesValue: 0,\r\n            secondsValue: 0,\r\n            asValue: 1,\r\n            restValue: 10\r\n        }\r\n    }\r\n    minutesHandler = (event) => {\r\n            console.log(event.target.value);\r\n            console.log(parseInt(event.target.value));\r\n            this.setState({ minutesValue: parseInt(event.target.value) });\r\n    }\r\n    secondsHandler = (event) => {\r\n            this.setState({ secondsValue: parseInt(event.target.value) });\r\n    }\r\n    asHandler = (event) => {\r\n            this.setState({ asValue: parseInt(event.target.value) });\r\n    }\r\n    restHandler = (event) => {\r\n            this.setState({ restValue: parseInt(event.target.value) });\r\n    }\r\n    dismounter = (event) => {\r\n        this.setState({ renderTimer: '' })\r\n    }\r\n    onSubmitHandler = (event) => {\r\n        event.preventDefault();\r\n        if (this.state.minutesValue === 0 && this.state.secondsValue === 0){\r\n            alert(\"No es posible entrenar si no pones tiempo\");\r\n        } else {\r\n            this.setState({ renderTimer: <PrincipalTimer minutes={this.state.minutesValue} seconds={this.state.secondsValue} assaults={this.state.asValue} rest={this.state.restValue} /> });\r\n        }\r\n    }\r\n    render() {\r\n        const { minutesValue, secondsValue, asValue, restValue } = this.state;\r\n        return (\r\n            <>\r\n                {this.state.renderTimer}\r\n                <div className=\"divider\"></div>\r\n                <form className=\"form container\" onSubmit={this.onSubmitHandler}>\r\n                    <div className=\"columns\">\r\n                        <div className=\"form-group column col-3 col-mx-auto\">\r\n                            <label className=\"form-label\" htmlFor=\"minutes\">Minutes</label>\r\n                            <select className=\"form-input\" id=\"minutes\" value={minutesValue} onChange={this.minutesHandler}>\r\n                                <option value=\"0\">0</option>\r\n                                <option value=\"1\">1</option>\r\n                                <option value=\"2\">2</option>\r\n                                <option value=\"3\">3</option>\r\n                                <option value=\"4\">4</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"form-group column col-3 col-mx-auto\">\r\n                            <label className=\"form-label\" htmlFor=\"seconds\">Seconds</label>\r\n                            <select className=\"form-input\" id=\"seconds\" value={secondsValue} onChange={this.secondsHandler}>\r\n                                <option value=\"0\">0</option>\r\n                                <option value=\"5\">5</option>\r\n                                <option value=\"10\">10</option>\r\n                                <option value=\"15\">15</option>\r\n                                <option value=\"20\">20</option>\r\n                                <option value=\"25\">25</option>\r\n                                <option value=\"30\">30</option>\r\n                                <option value=\"35\">35</option>\r\n                                <option value=\"40\">40</option>\r\n                                <option value=\"45\">45</option>\r\n                                <option value=\"50\">50</option>\r\n                                <option value=\"55\">55</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"form-group column col-3 col-mx-auto\">\r\n                            <label className=\"form-label\" htmlFor=\"assaults\">Asaults</label>\r\n                            <select className=\"form-input\" id=\"assaults\" value={asValue} onChange={this.asHandler}>\r\n                                <option value=\"1\">1</option>\r\n                                <option value=\"2\">2</option>\r\n                                <option value=\"3\">3</option>\r\n                                <option value=\"4\">4</option>\r\n                                <option value=\"5\">5</option>\r\n                                <option value=\"6\">6</option>\r\n                                <option value=\"7\">7</option>\r\n                                <option value=\"8\">8</option>\r\n                                <option value=\"9\">9</option>\r\n                                <option value=\"10\">10</option>\r\n                                <option value=\"11\">11</option>\r\n                                <option value=\"12\">12</option>\r\n                                <option value=\"13\">13</option>\r\n                                <option value=\"14\">14</option>\r\n                                <option value=\"15\">15</option>\r\n                                <option value=\"16\">16</option>\r\n                                <option value=\"17\">17</option>\r\n                                <option value=\"18\">18</option>\r\n                                <option value=\"19\">19</option>\r\n                                <option value=\"20\">20</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"form-group column col-3 col-mx-auto\">\r\n                            <label className=\"form-label\" htmlFor=\"rest\">Rest</label>\r\n                            <select className=\"form-input\" id=\"rest\" value={restValue} onChange={this.restHandler}>\r\n                                <option value=\"10\">10</option>\r\n                                <option value=\"20\">20</option>\r\n                                <option value=\"30\">30</option>\r\n                                <option value=\"40\">40</option>\r\n                                <option value=\"50\">50</option>\r\n                                <option value=\"50\">60</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"columns mt-2\">\r\n                        <input className=\"btn column col-11 col-mx-auto\" type=\"submit\" value=\"Start\"></input>\r\n                        <p className=\"btn btn-error column col-11 col-mx-auto mt-1\" onClick={this.dismounter}>Stop</p>\r\n                    </div>\r\n                </form>\r\n            </>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport TimerForm from './components/formRender';\r\nimport './../node_modules/spectre.css' //Estilos\r\nexport default class App extends Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      renderForm : <TimerForm/>,\r\n    }\r\n}\r\n  render(){\r\n    return(\r\n      <>\r\n      {this.state.renderForm}\r\n      </>\r\n    );\r\n  }\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/startBell.10d2041e.wav\";"],"sourceRoot":""}